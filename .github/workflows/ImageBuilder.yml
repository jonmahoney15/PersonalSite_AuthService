# This is a basic workflow to help you get started with Actions

name: IMAGE BUILD

# Controls when the workflow will run
on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main, dev ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest
    
    env:
      SERVICE_NAME: ${{ secrets.SERVICE_NAME }}
      PROJECT_ID: ${{ secrets.PROJECT_ID }}

    steps:
      - name: Prepare
        id: prep
        run: |
          BRANCH=${GITHUB_REF##*/}
          TS=$(date +%s)
          REVISION=${GITHUB_SHA::8}
          BUILD_ID="${BRANCH}-${REVISION}-${TS}"
          LATEST_ID=canary
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            BUILD_ID=${GITHUB_REF/refs\/tags\//}
            LATEST_ID=latest
          fi
          echo ::set-output name=BUILD_DATE::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          echo ::set-output name=BUILD_ID::${BUILD_ID}
          echo ::set-output name=LATEST_ID::${LATEST_ID}

      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup gcloud cli
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
            install: true

      - name: Creds for GCP
        run: |
          gcloud auth configure-docker -q
      
      - name: Build and Push
        uses: docker/build-push-action@v3
        with: 
            platforms: linux/amd64,linux/arm64
            push: true
            tags: |
                ${{ env.SERVICE_NAME }}:${{ steps.prep.outputs.BUILD_ID }}

